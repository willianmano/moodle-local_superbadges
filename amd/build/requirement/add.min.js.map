{"version":3,"file":"add.min.js","sources":["../../src/requirement/add.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport {addRequirement} from './repository';\nimport showNotification from 'local_superbadges/notification';\n\n/* eslint-disable */\nexport const init = (trigger, courseid, badgeid) => {\n    document.querySelectorAll(trigger).forEach(target =>\n        target.addEventListener('click', (event) => {\n            event.preventDefault();\n\n            openModal(event.target.dataset.key, courseid, badgeid);\n        })\n    );\n};\n\nconst openModal = async (method, courseid, badgeid) => {\n    let formClass = `superbadgesrequirement_${method}\\\\form\\\\requirement`;\n\n    const modal = new ModalForm({\n        formClass,\n        args: {formdata: {courseid: courseid, badgeid: badgeid, method: method}},\n        saveButtonText: getString('addrequirement', 'local_superbadges'),\n        modalConfig: {\n            title: getString('addrequirement', 'local_superbadges'),\n        },\n        returnFocus: e.currentTarget\n    });\n\n    modal.addEventListener(modal.events.FORM_SUBMITTED, (event) => {\n        submitFormAjax(event.detail);\n    });\n\n    modal.show();\n}\n\nconst submitFormAjax = async(formdata) => {\n    try {\n        let response = await addRequirement(formdata);\n\n        showNotification(response.message);\n\n        let data = JSON.parse(response.data);\n\n        addRequirementToTable(data);\n    } catch (e) {\n        showNotification(e.message, 'error');\n\n        return false;\n    }\n}\n\nconst addRequirementToTable = (data) => {\n    let target = data.target ??= '';\n\n    let tableLine = $('<tr>' +\n        '<th scope=\"row\">'+data.id+'</th>' +\n        '<td>'+data.pluginname+'</td>' +\n        '<td>'+target +'</td>' +\n        '<td>'+data.value+'</td>' +\n        '<td style=\"width: 120px; text-align: center;\">' +\n        '<a href=\"#\" data-id=\"'+data.id+'\" class=\"btn btn-danger btn-sm delete-requirement\">' +\n        '<i class=\"fa fa-trash-o\"></i>' +\n        '</a> ' +\n        '</td>' +\n        '</tr>');\n\n    tableLine\n        .appendTo('.table-requirements tbody')\n        .hide().fadeIn('normal');\n}\n"],"names":["trigger","courseid","badgeid","document","querySelectorAll","forEach","target","addEventListener","event","preventDefault","openModal","dataset","key","async","method","formClass","modal","ModalForm","args","formdata","saveButtonText","modalConfig","title","returnFocus","e","currentTarget","events","FORM_SUBMITTED","submitFormAjax","detail","show","response","message","data","JSON","parse","addRequirementToTable","$","id","pluginname","value","appendTo","hide","fadeIn"],"mappings":"qdAMoB,CAACA,QAASC,SAAUC,WACpCC,SAASC,iBAAiBJ,SAASK,SAAQC,QACvCA,OAAOC,iBAAiB,SAAUC,QAC9BA,MAAMC,iBAENC,UAAUF,MAAMF,OAAOK,QAAQC,IAAKX,SAAUC,qBAKpDQ,UAAYG,MAAOC,OAAQb,SAAUC,eACnCa,2CAAsCD,oCAEpCE,MAAQ,IAAIC,mBAAU,CACxBF,UAAAA,UACAG,KAAM,CAACC,SAAU,CAAClB,SAAUA,SAAUC,QAASA,QAASY,OAAQA,SAChEM,gBAAgB,mBAAU,iBAAkB,qBAC5CC,YAAa,CACTC,OAAO,mBAAU,iBAAkB,sBAEvCC,YAAaC,EAAEC,gBAGnBT,MAAMT,iBAAiBS,MAAMU,OAAOC,gBAAiBnB,QACjDoB,eAAepB,MAAMqB,WAGzBb,MAAMc,QAGJF,eAAiBf,MAAAA,mBAEXkB,eAAiB,8BAAeZ,oCAEnBY,SAASC,aAEtBC,KAAOC,KAAKC,MAAMJ,SAASE,MAE/BG,sBAAsBH,MACxB,MAAOT,mCACYA,EAAEQ,QAAS,UAErB,IAITI,sBAAyBH,4BACvB3B,4BAAS2B,KAAK3B,4CAAL2B,KAAK3B,OAAW,GAEb+B,EAAE,uBACKJ,KAAKK,GADV,YAEPL,KAAKM,WAFE,YAGPjC,OAHO,YAIP2B,KAAKO,MAJE,2EAMUP,KAAKK,GANf,mGAabG,SAAS,6BACTC,OAAOC,OAAO"}