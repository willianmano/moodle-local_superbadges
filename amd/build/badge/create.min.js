define("local_superbadges/badge/create",["exports","jquery","core_form/modalform","core/str","local_superbadges/notification","core/templates"],(function(_exports,_jquery,_modalform,_str,_notification,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_jquery=_interopRequireDefault(_jquery),_modalform=_interopRequireDefault(_modalform),_notification=_interopRequireDefault(_notification),_templates=_interopRequireDefault(_templates);_exports.init=(selector,courseid)=>{document.querySelectorAll(selector).forEach((target=>target.addEventListener("click",(event=>{event.preventDefault(),openModal(courseid)}))))};const openModal=async courseid=>{const modal=new _modalform.default({formClass:"local_superbadges\\forms\\badge",args:{formdata:{courseid:courseid}},saveButtonText:(0,_str.get_string)("createbadge","local_superbadges"),modalConfig:{title:(0,_str.get_string)("createbadge","local_superbadges")}});modal.addEventListener(modal.events.FORM_SUBMITTED,(event=>{if(event.detail.message){(0,_notification.default)(event.detail.message);let data=JSON.parse(event.detail.data);return addBadgeToTable(data)}{const warningMessages=event.detail.warnings.map((warning=>warning.message));(0,_notification.default)(warningMessages.join("<br>"),"error")}})),modal.show()},addBadgeToTable=async data=>{let tableLine=await _templates.default.render("local_superbadges/badge_tableline",data);(0,_jquery.default)(".table-badges tbody").append(tableLine).hide().fadeIn()}}));

//# sourceMappingURL=create.min.js.map