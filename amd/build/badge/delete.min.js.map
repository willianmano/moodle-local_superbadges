{"version":3,"file":"delete.min.js","sources":["../../src/badge/delete.js"],"sourcesContent":["import $ from 'jquery';\nimport Swal from 'local_superbadges/sweetalert';\nimport showNotification from 'local_superbadges/notification';\nimport {get_strings as getMoodleStrings} from 'core/str';\nimport {deleteBadge} from './repository';\n\nlet strings = {\n    CONFIRM_TITLE: 'Are you sure?',\n    CONFIRM_MSG: 'Once deleted, the item cannot be recovered!',\n    CONFIRM_YES: 'Yes, delete it!',\n    CONFIRM_NO: 'Cancel'\n};\n\nconst COMPONENT_STRINGS = [\n    {\n        key: 'deleteitem_confirm_title',\n        component: 'local_superbadges'\n    },\n    {\n        key: 'deleteitem_confirm_msg',\n        component: 'local_superbadges'\n    },\n    {\n        key: 'deleteitem_confirm_yes',\n        component: 'local_superbadges'\n    },\n    {\n        key: 'deleteitem_confirm_no',\n        component: 'local_superbadges'\n    }\n];\n\nconst getStrings = async() => {\n    const trasnslatedStrings = await getMoodleStrings(COMPONENT_STRINGS);\n\n    strings.CONFIRM_TITLE = trasnslatedStrings[0];\n    strings.CONFIRM_MSG = trasnslatedStrings[1];\n    strings.CONFIRM_YES = trasnslatedStrings[2];\n    strings.CONFIRM_NO = trasnslatedStrings[3];\n    strings.SUCCESS = trasnslatedStrings[4];\n};\n\n/* eslint-disable */\nexport const init = (trigger) => {\n    getStrings();\n\n    $(\"body\").on(\"click\", trigger, function(event) {\n        event.preventDefault();\n\n        let eventTarget = $(event.currentTarget);\n\n        Swal.fire({\n            title: strings.CONFIRM_TITLE,\n            text: strings.CONFIRM_MSG,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: strings.CONFIRM_YES,\n            cancelButtonText: strings.CONFIRM_NO\n        }).then(function (result) {\n            if (result.value) {\n                deleteBadgeEntry(eventTarget);\n            }\n        });\n    });\n};\n\nconst deleteBadgeEntry = async (target) => {\n    let message = await deleteBadgeFromDatabase(target.data('id'));\n\n    if (message !== false) {\n        deleteBadgeFromTable(target);\n\n        showNotification(message);\n    }\n}\n\nconst deleteBadgeFromDatabase = async(id) => {\n    try {\n        let response = await deleteBadge(id);\n\n        return response.message;\n    } catch (e) {\n        showNotification(e.message, 'error');\n\n        return false;\n    }\n}\n\nconst deleteBadgeFromTable = (target) => {\n    target.closest('tr').fadeOut(\"normal\", function() {\n        $(this).remove();\n    });\n};\n"],"names":["strings","CONFIRM_TITLE","CONFIRM_MSG","CONFIRM_YES","CONFIRM_NO","COMPONENT_STRINGS","key","component","trigger","async","trasnslatedStrings","SUCCESS","getStrings","on","event","preventDefault","eventTarget","currentTarget","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","deleteBadgeEntry","message","deleteBadgeFromDatabase","target","data","deleteBadgeFromTable","id","e","closest","fadeOut","this","remove"],"mappings":"6gBAMIA,QAAU,CACVC,cAAe,gBACfC,YAAa,8CACbC,YAAa,kBACbC,WAAY,gBAGVC,kBAAoB,CACtB,CACIC,IAAK,2BACLC,UAAW,qBAEf,CACID,IAAK,yBACLC,UAAW,qBAEf,CACID,IAAK,yBACLC,UAAW,qBAEf,CACID,IAAK,wBACLC,UAAW,oCAeEC,UAXFC,iBACTC,yBAA2B,oBAAiBL,mBAElDL,QAAQC,cAAgBS,mBAAmB,GAC3CV,QAAQE,YAAcQ,mBAAmB,GACzCV,QAAQG,YAAcO,mBAAmB,GACzCV,QAAQI,WAAaM,mBAAmB,GACxCV,QAAQW,QAAUD,mBAAmB,IAKrCE,uBAEE,QAAQC,GAAG,QAASL,SAAS,SAASM,OACpCA,MAAMC,qBAEFC,aAAc,mBAAEF,MAAMG,mCAErBC,KAAK,CACNC,MAAOnB,QAAQC,cACfmB,KAAMpB,QAAQE,YACdmB,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmBzB,QAAQG,YAC3BuB,iBAAkB1B,QAAQI,aAC3BuB,MAAK,SAAUC,QACVA,OAAOC,OACPC,iBAAiBd,0BAM3Bc,iBAAmBrB,MAAAA,aACjBsB,cAAgBC,wBAAwBC,OAAOC,KAAK,QAExC,IAAZH,UACAI,qBAAqBF,kCAEJF,WAInBC,wBAA0BvB,MAAAA,sBAEH,2BAAY2B,KAEjBL,QAClB,MAAOM,mCACYA,EAAEN,QAAS,UAErB,IAITI,qBAAwBF,SAC1BA,OAAOK,QAAQ,MAAMC,QAAQ,UAAU,+BACjCC,MAAMC"}